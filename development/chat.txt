Как определить что содержится в категории?
Нужно искать в таблице для товара и таблице для категорий. Если будет найдено
в таблице для категорий, то отображаться будут категории иначе будет 
отображаться товар.

Какие есть варианты отображения?
Речь идет о переменной id на странице

Переменной нет:
    Отображаеются постеры основных категорий.

Переменная указывает на категорию в которой категории:
    Если есть постер то он отображается. Отображается кнопка "Прошлая категория"
    и название этой категории. Отображается список категорий.

Переменная указывает на категорию в которой товар:
    Отображается кнопка "Прошлая категория" и название этой категории.


НУЖЕН ЛИ ПОСТЕР ПРОСТИМ КАТЕГОРИЯМ?
Постер будет отображаться всегда.

ЧТО ТАКОЕ ПОСТЕР?
Постер это открытака корневых категорий.

НУЖНЫ ЛИ ДРУГИЕ ТАБЛИЦИ?
Нет. Почему? Есть основная категория, её идентификатор 1. Унеё отсутствуют
остальные поля. Дальше о корневых категориях. Корневые категории имеют 
идентификатор родителя 1, личный идентификатор и дынные постера, а заголовок не
имеет. Обычные категории имеют личный идентификатор, идентификатор родителя и
заголовок, а данные постера отсутствуют. точно так же и с категориями, которые
содержать товар.

НУЖНО ЛИ ОТОБРАЖАТЬ ПОСТЕР ДЛЯ КАЖДОЙ КАТЕГОРИИ?
Нужно, и там где отображается товар, тоже.

Разделить категории на несколько таблиц?
Предложение состоит в том, чтобы хранить корневые категории в отдельной таблице.
Также отдельнеы таблици выделяются для обичных категорий и категорий которые
содержат товар. Утверждаю.

Как называются таблицы?
categories-root (id, photo, title)
categories-for-categories (id, id_parent, title)
categories-for-products (id, id_parent, title)

Открытие корневой категории.
На странице переменная с идентификатором корневой категории. Происходит поиск
по таблицам. Проблема в том что в таблицах должны быть уникальные идентификаторы.
То есть в трёх таблицах недолжно быть одинаковых идентификаторов.

Отображение кнопки "Назад".
Кнопку вместе с названием текущей категори нужно отображать во всех случаях.
От категории к категории меняется только то, будет ли отображаться товар или
же всё таки список категорий. Всё остальное остаётся на месте.

Какие есть варианты?
1. Корневая категория содержит товар. 2. Корневая категория содержит категории
для товара. 3. Корневая категория содержит категории для категорий.
4. Обичная категория содержит товар. 5. Обычная категория содержит категории.

Что происходит когда открывается корневая категория?
Открываетс корневая категория, нужно определить, что в ней хринитися

Типы содержимого:
Категории для категорий, категории для товаров, товар. Как определить какой из
типов? Нужно проверить три таблицы. Есть ли в них пункты с id_parent
таким как у даной категории. Различаются четыре типа: "empty", "categories-for-
categories", "categories-for-products".

Получить корневую категорию по идентификатору дочерной категории.
Для этого берём идентификатор родительской категории и определяем в какой
таблице она находится. Если она на ходится в таблице обычных категорий, то
теперь берём идентфикатор родительской категории этой категории и снова проверяем
в какой таблице она находится. Это делаем до тех пор пока родительская категория
не окажется той оторая хринится в таблице для корневых категорий.
Теперь о том как это работает. Следует разделить процес на несколько методов.
Один из них будет отвечать за то. чтобы проверять не является ли категория родительской
Другой, основной, содержит цикл. Что он делает? Делает проверку идентифекатора
при помощи вспомогательного метода. Дальше получает идентификатор родительской
категории. Цыкл закончен.

Что делать дальше?
Страницу для администрации. С чего начать разработку? Можно обозначить функции
которые будут при этом использоваться. Можно начать с того, что это будет одна или
большее колицество страниц. Определимся с функциями.

И как предисловие, можно сказать, что ключевая функция это авторизация.

Какие будут функции?
- Добавление, удаление и редактирование товара и категорий.
- Остальные настройки сайта, такие как отдельные блоки с текстом.

Как всё это представлять?
Например для настройки сайта можно использовать поле для выбора свойства из списка
свойств. Потом присвоить свойству значение и отправить форму. Для добавления
товара использовать отдельный блок, для удаления отдельный и для редактирования 
тоже отдельный.

Подробный список функций работы с товаром и категориями.
Важный момент, что это то как видит пользователь. Категории будут отдельно.
- Товар
    - Добавить
    - Редактировать
        - Фотографии
        - Заголовок
        - Наличие
        - Цена
        - Описание
        - Характерисики
        - Категория
    - Удалить
- Категории
    - Добавить
        - Корневая категория
        - Обычная категория
        - Категория для товаров
    - Редактировать
        - Название
    - Удалить
- Настройки
    - Редактировать
        - Значение свойства
- Администратор
    - Редактировать
        - Имя
        - Пароль


Каким будет интерфейс?
Когда пользователь первый раз вошёл на страницу, появляется окно авторизации.
Послудующие разы оно не появляется. Дальше пользователь видит основной экран
приложения в котором несколько подзаголовков. Остаётся один вопрос, как выбрать
категорию которую нужно редактировать и  товар который нужно редактировать.
Для этого появляется всплывающее окно со списком товаров.

Конечный вид интерфейса
- Товар
    - Добавить
    - Удалить
        - Окно для выбора товара. Появляется список товаров с его названиями и 
        идентификаторами.
    - Редактировать (подраздел)
        - Фотографии (подраздел)
            - Добавить
            - Удалить
                - Отображает окно с фотографиями. Они отображаются в небольшом
                  разрешении.
        - Заголовок (подраздел)
            - Редактировать
                - Отображается окно с текстовым полем заполненым существующим
                  текстом названия. Также кнопка подтверждения и отклонения.
        - Наличие (подраздел)
            - Редактировать
                - отображается окно с выбором доступных состояний товара
        - Описание
            - Редактировать
                - Отображает поле для ввода с возможностью сделать текст жирным.
        - Характеристики
            - Редактировать
                - Отображает окно с таблицей, в которой заполнены значения по умол
                  чанию и есть возможность добавлять новые характеристики.
        - Категория
            - Редактировать
                - Выбрать в какой категории нахоидтся товар.
- Категории
    - Добавить
        - Корневая категория
        - Обычная категория
        - Категория для товаров
    - Редактировать
        - Название
- Настройки
    - Редактировать
        - Значение свойства
- Администратор
    - Редактировать
        - Имя
        - Пароль

Для упрощения нужно предпринять меры
Для этого первая версия приложения будет иметь очень ограниченную функциональность.
Система будет такой же как описывалось ранее. Тоесть доставлять данные будут 
асинхронные запросы js а всё приложение находиться в одном файле.

Функциональность первой версии
Авторизироваться, нажать кнопку создания товара. В итоге пользователь получает
новий товар в раздле свежие товары.

Чтобы авторизировтаься тоже нужно отправлять асинхронные зарпосы и разделять
страницу на два экрана. Значит нужно создать два экрана позицианированых относительно
страницы.

Как это работает?
Будет блок экрана ширина которого нулевая. При необходимости открыть экран ширина
становится максимальной.

Главная страница
- Шапка
    - Выйти
    - Добавить товар
    - Поиск
- Тело
    - Настройки
    - Категории
    - Администраторы
    - Товар

Аутентификация
Задача скрипта вернуть одно из двух значений:
- "true": Прошёл аутентификацию.
- "false": Не прошёл (может означать даже опечатку в имени или пароле).

Экран категорий.
- Шапка
- Тело
    - Постеры
        - Добавить постер
            - Выбрать фото
            - Ввсети название
            - Отправить
        - Удалить постер
            - Ввести название
            - Отправить
    - Категории для товаров
        - Добавить категорию
            - Где находится категория
        - Удалить категорию
    - Категории для категорий
        - Добавить категорию
            - Где находится категория
        - Удалить категорию

Как организовать страницу администраторов?
Нужно отобразить список администраторов. Нужна возможность добавления
администратора. Изменить имя, фамилию и пароль может каждый администратор.
При нажатии на пункт списка, отображается окно с тремя полями (они заполнены),
На окне имеются кнопки "Удалить", "Отмена" и "Дальше". При добавлении администратора,
Отображается то же окно с полями (они заполнены теми же данными какие есть у 
текущего администратора).

Логотип.
Другая фотография. Цветной. Только голова. Со всеми деталями. Большое разрешение. Надпись.

Страница администраторов.
Что происходит когда пользоватлеь нажимает на пункт? Открывается окно с данными пользователя. При нажатии в этом окне кнопки "Дальше", данные этого пользователя обновляются. При этом нужно знать также и старые данные пользователя. Нужно загружать список пользователей. Делать это лучше через метод того самого класа. Также нужно предусмотреть обновление:
    - Получение данные с сервера.
    - Заново заполнить поля.
При открытии окна, данные со списка переносятсяв эти поля. Также необходимо запомнить эти данные в памяти. Когда будет нажата кнопка "Дальше", по данные из памяти происходит отправка обновлённых данных на сервер.

Страница настроек.
Дизайн будет такой же как у страницы администраторов.
Таблица состоит из двух неименованых столбцов. При нажатии на ряд таблицы открывается окно с названием настройки, текстовым плем (пользователь может ввести значение настройки), кнопки "Отмена" (закрывает окно) и кнопки "Дальше".

Страница редактирования товаров:
- Требования:
    - Интерфейс:
        - Чтобы различать к чему относятся те или иные кнопки следует использовать подзаголовок такого дизайна как в сайте.
        - Для отображения списка товаров нужно использовать таблицу.
        - Для, например, описания нужно использовать многострочное текстовое поле. Так как таких полей ещё небыло, то вот единственное требование заключается в том, чтобы его дизайн был точно таким как иднострочного поля (подпись поля тоже необходима).
        - Фотографии:
            - Для добавления используется кнопка "Добавить", она даёт возможность загрузки по одной фотографии.
            - Фотографии отображаются достаточно крупного размера.
            - Фотографии отображаются точно в таком порядке в каком были загружены.
            - При нажатии на фото отображается окно:
                - Отмена
                - Удалить
                - Сделать главной
                    - Фотография становится первой в списке.
        - Описание:
            - Это поле особенно тем, что имеет функции форматирования текста:
                - Жирный
                - Курсив
                - Сброс
            - Чтобы сделать текст жирным, необходимо выделить текст и нажать на кнопку "Жирный" над текстовым полем.
        - Для отображения характеристик используется таблица. Их можно редактировать (нужно нажать на соответствующую строку), удалять, добавлять.
        - Быстрый просмотр товара:
            - При нажатии кнопки "Просмотреть", отображается окно с товаром ктоторый сейчас редактируется.
    - Функциональность:
        - Следует напомнить, что чем проще организовать функциональность тем лучше, чтобы это заняло меньше времени, но чтобы основные необходимые функции и функции для удобного повседневного использования остались.
        - Форматирование текста. Чтобы описание и характеристики корректно отображались, следует заменить символ новой строки на разметку на тег br.